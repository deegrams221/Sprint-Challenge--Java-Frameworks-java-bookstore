server.port=${PORT:2019}
# server.servlet.context-path=/apis

# Which db to run
# local.run.db=H2
 local.run.db=POSTGRESQL

# Environment Variables Needed for PostgreSQL database
# MYDBHOST
# MYDBNAME
# MYDBUSER
# MYDBPASSWORD

# Environment Variables Needed for OAuth2 Authentication Server
# OAUTHCLIENTID  - lambda-client
# OAUTHCLIENTSECRET  -  lambda-secret
# Find heroku info
# heroku config -a deegrams-oauthmin

# following copied from Heroku
# postgres://hlssfoqkarilot:2617d019a97dd70a55b77278281bb8d57264044ab1c8306ee517f99c0459ad39@ec2-174-129-220-12.compute-1.amazonaws.com:5432/dcmb33ku36s52f
# posgress://username      :password                                                        @host name                                 :5432/dbname

# Begin h2 configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
# allow-other=true similar to CORS
# End h2 configuration

# What do with the schema
# drop n create table again, good for testing - do NOT use in production!
spring.jpa.hibernate.ddl-auto=create
# data.sql - never vs always will delete data.sql
spring.datasource.initialization-mode=always

# Good for production! use this instead of above
# spring.jpa.hibernate.ddl-auto=update or none -depends on company policies
# spring.datasource.initialization-mode=never

# Should we use createBlob from java.sql.connection. PostgreSQL requires it to be true.
# Blob is a group of memory
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Feature that determines what happens when no accessors are found for a type
# (and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.fail-on-empty-beans=false

# Turns off Spring Boot automatic exception handling
server.error.whitelabel.enabled=false

# needed for actuators to work
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true

# Shows the generated and custom SQL but does hurt performance and the logs get full fast
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# turn on for h2 test run

# keeps a transaction inside of the same entity manager
# This property register an EntityManager to the current thread,
# so you will have the same EntityManager until the web request is finished.
spring.jpa.open-in-view=true